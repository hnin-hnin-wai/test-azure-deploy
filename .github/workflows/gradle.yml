name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      # Step 1: Checkout the code
      - uses: actions/checkout@v4

      # Step 2: Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Step 3: Set up Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4.0.0

      # Step 4: Use GitHub Secrets to set environment variables
      - name: Export environment variables
        run: |
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> $GITHUB_ENV

      # Step 5: Build the application
      - name: Build with Gradle Wrapper
        run: ./gradlew build

  docker-build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - uses: actions/checkout@v4

      # Step 2: Log in to DockerHub (Optional: If pushing images to DockerHub)
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build and push Docker image
      #- name: Build and push Docker image
      - name: Pull Docker Image
        run: docker pull hninhninwai/heartlink:1.0.3

