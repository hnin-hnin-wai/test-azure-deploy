services:
  postgres:
    container_name: postgresdb
    image: 'postgres:15.3'
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '5433:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s # The health check runs every 10 seconds.
      timeout: 5s # Each health check must complete within 5 seconds.
      retries: 3 # Docker will retry the health check 3 times before marking the service as unhealthy.
      start_period: 10s # This is a delay (10 seconds) after container startup before Docker begins checking the service health, giving PostgreSQL some time to initialize.

  web:
    image: 'hninhninwai/heartlink:1.0.3'
    build:
      # Uses the current directory as the build context,
      # making all files in this directory available during the build process.
      context: .
      dockerfile: Dockerfile
    ports:
      - "8888:8080"
    depends_on:
      postgres:
        # Waits for the service to pass its health checks, ensuring it is fully operational.
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
